{"version":3,"sources":["services/api.js","components/Map/index.js","pages/Chart/index.js","routes.js","App.js","index.js"],"names":["api","getData","data","results","filter","c","city","city_ibge_code","map","ibgeCode","date","lastAvailable","last_available_confirmed","lastAvailableDeaths","last_available_deaths","newConfirmed","new_confirmed","newDeaths","new_deaths","latLng","citiesCordinates","find","y","Map","useState","selectedCity","setSelectedCity","margin","useEffect","console","log","useLayoutEffect","updateSize","resizeMap","document","getElementById","clientWidth","clientHeight","window","addEventListener","removeEventListener","divWidth","divHeight","width","d3","attr","citiesCodinates","height","svg","append","projection","center","translate","scale","path","cities","topojson","objects","features","selectAll","enter","on","this","classed","d","properties","cod","nodes","forEach","s","createMap","mapTopology","id","Chart","className","Routes","component","exact","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1434804c.chunk.js","sourcesContent":["import data from './data.json'\nimport citiesCordinates from '../data/cities-codinates.json';\n\n\nfunction formatResponse(data){\n\n  let cities = data.filter(c=> c.city !== null && c.city_ibge_code !== null)\n    .map(c=> ({\n      city: c.city,\n      ibgeCode: c.city_ibge_code,\n      date: c.date,\n      lastAvailable: c.last_available_confirmed,\n      lastAvailableDeaths: c.last_available_deaths,\n      newConfirmed:  c.new_confirmed,\n      newDeaths: c.new_deaths,\n      latLng: (citiesCordinates.find(y=> y.ibgeCode === c.city_ibge_code) || {}).latLng\n    }))\n\n    return cities\n}\n\nlet api = {\n  getData: ()=>{\n    return formatResponse(data.results)\n  }\n}\n\nexport default api","import React, { useEffect, useLayoutEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom'\n\nimport * as d3 from 'd3'\nimport * as topojson from \"topojson-client\";\n\nimport citiesCordinates from '../../data/cities-codinates.json';\nimport mapTopology from '../../data/map.json';\n\nimport api from '../../services/api'\n\nimport './style.css'\n\nconsole.log(api.getData())\n\nexport default function Map() {\n\n  const [selectedCity, setSelectedCity] = useState('');\n\n  const margin = { top: 50, left: 50, right: 50, bottom: 50 };\n\n  useEffect(() => {\n\n    console.log(selectedCity)\n    \n  }, [selectedCity]);\n\n  useLayoutEffect(() => {\n    function updateSize() {\n\n      resizeMap(\n        document.getElementById('map').clientWidth,\n        document.getElementById('map').clientHeight\n      )\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  let resizeMap = (divWidth, divHeight) => {\n    let width = divWidth - margin.left - margin.right;\n\n    d3.select(\"g\").attr(\"transform\", \"scale(\" + width / 900 + \")\");\n  }\n\n  var createMap = (divWidth, divHeight, data, citiesCodinates) => {\n\n    let height = divHeight - margin.top - margin.bottom,\n      width = divWidth - margin.left - margin.right;\n\n    let svg = d3.select('#map')\n      .append('svg')\n      .attr('height', height + margin.top + margin.bottom)\n      .attr('width', width + margin.left + margin.right)\n      .append('g')\n      .attr('transform', `translate(${margin.left}, ${margin.right})`);\n\n\n    let projection = d3.geoMercator()\n      .center([-50.80, -27.61])\n      .translate([width / 2, height / 2])\n      .scale(10000)\n\n    let path = d3.geoPath()\n      .projection(projection);\n\n    let cities = topojson.feature(data, data.objects['42']).features;\n\n    svg.selectAll('.city')\n      .data(cities)\n      .enter().append('path')\n      .attr('class', 'city')\n      .attr('d', path)\n      .on('mouseover', function () {\n        d3.select(this).classed('city-hovered', true)\n      }).on('mouseout', function () {\n        d3.select(this).classed('city-hovered', false)\n      })\n      .on('click', function (d) {\n        let city = citiesCodinates.find(c => c.ibgeCode === d.properties.cod)\n        setSelectedCity(city)\n        let selecteds = d3.select('#map').selectAll('.city.city-selected')\n        selecteds.nodes().forEach((s) => {\n          d3.select(s).classed('city-selected', false)\n        })\n        d3.select(this).classed('city-selected', true)\n      })\n\n    /**svg.selectAll('.city-circle')\n      .data(citiesCodinates)\n      .enter().append(\"circle\")\n      .attr(\"r\", 4)\n      .attr(\"cx\", function(c){\n        var coords = projection([c.latLng.lng, c.latLng.lat]);\n        return coords[0]\n      })\n      .attr(\"cy\", function(c){\n        var coords = projection([c.latLng.lng, c.latLng.lat]);\n        return coords[1]\n      })\n      **/\n  }\n\n  useEffect(() => {\n    createMap(\n      document.getElementById('map').clientWidth,\n      document.getElementById('map').clientHeight,\n      mapTopology,\n      citiesCordinates\n    )\n  }, []);\n\n  return (\n    <div id=\"map\"></div>\n  )\n}","import React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom'\n\nimport Map from '../../components/Map'\n\nimport './style.css'\n\nexport default function Chart() {\n  return (\n    <div className=\"container\">\n      <div className=\"chart-container\">\n        <Map />\n      </div>\n      <div className=\"details-container\">\n        <div className=\"details\">\n          <p className=\"title\">\n            Santa Catarina\n          </p>\n          <div className=\"summary\">\n            <div className=\"summary-item\">\n              <div className=\"description\">\n                Casos confirmados:\n              </div>\n              <div className=\"value\"> \n                999\n              </div>\n            </div>\n            <div className=\"summary-item\">\n              <div className=\"description\">\n                Obitos:\n              </div>\n              <div className=\"value\">\n                10\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Chart from './pages/Chart'\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={Chart} exact/>\n      </Switch>\n    </BrowserRouter>\n  );\n}","import React, { useState } from 'react';\n\nimport './global.css'\n\nimport Routes from './routes'\n\nfunction App() {\n  return (\n   <Routes />\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}