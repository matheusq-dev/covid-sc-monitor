{"version":3,"sources":["components/Map/index.js","stores/rootStore.js","pages/Chart/index.js","routes.js","App.js","index.js"],"names":["Map","dispatch","useDispatch","useState","selectedCity","setSelectedCity","margin","useEffect","type","city","useLayoutEffect","updateSize","resizeMap","document","getElementById","clientWidth","clientHeight","window","addEventListener","removeEventListener","createMap","mapTopology","citiesCordinates","divWidth","divHeight","width","d3","attr","data","citiesCodinates","height","svg","append","projection","center","translate","scale","path","cities","topojson","objects","features","selectAll","enter","on","this","classed","d","find","c","ibgeCode","properties","cod","nodes","forEach","s","id","store","createStore","state","action","Chart","subscribe","getState","axios","get","then","res","console","log","className","Routes","component","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.428e6ba0.chunk.js","sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from 'react';\n\nimport * as d3 from 'd3'\nimport * as topojson from \"topojson-client\";\n\nimport citiesCordinates from '../../data/cities-codinates.json';\nimport mapTopology from '../../data/map.json';\n\nimport { useDispatch } from \"react-redux\";\n\nimport './style.css'\n\nexport default function Map() {\n\n  const dispatch = useDispatch()\n\n  const [selectedCity, setSelectedCity] = useState('');\n\n  const margin = { top: 50, left: 50, right: 50, bottom: 50 };\n\n  useEffect(() => {\n    dispatch({\n      type: \"SET_CITY\",\n      city: selectedCity\n    })\n\n\n  }, [selectedCity]);\n\n  useLayoutEffect(() => {\n    function updateSize() {\n\n      resizeMap(\n        document.getElementById('map').clientWidth,\n        document.getElementById('map').clientHeight\n      )\n    }\n    window.addEventListener('resize', updateSize);\n    updateSize();\n    return () => window.removeEventListener('resize', updateSize);\n  }, []);\n\n  useEffect(() => {\n    createMap(\n      document.getElementById('map').clientWidth,\n      document.getElementById('map').clientHeight,\n      mapTopology,\n      citiesCordinates\n    )\n  }, []);\n\n  let resizeMap = (divWidth, divHeight) => {\n    let width = divWidth - margin.left - margin.right;\n\n    d3.select(\"g\").attr(\"transform\", \"scale(\" + width / 900 + \")\");\n  }\n\n  var createMap = (divWidth, divHeight, data, citiesCodinates) => {\n\n    let height = divHeight - margin.top - margin.bottom,\n      width = divWidth - margin.left - margin.right;\n\n    let svg = d3.select('#map')\n      .append('svg')\n      .attr('height', height + margin.top + margin.bottom)\n      .attr('width', width + margin.left + margin.right)\n      .append('g')\n      .attr('transform', `translate(${margin.left}, ${margin.right})`);\n\n\n    let projection = d3.geoMercator()\n      .center([-50.80, -27.61])\n      .translate([width / 2, height / 2])\n      .scale(10000)\n\n    let path = d3.geoPath()\n      .projection(projection);\n\n    let cities = topojson.feature(data, data.objects['42']).features;\n\n    svg.selectAll('.city')\n      .data(cities)\n      .enter().append('path')\n      .attr('class', 'city')\n      .attr('d', path)\n      .on('mouseover', function () {\n        d3.select(this).classed('city-hovered', true)\n      }).on('mouseout', function () {\n        d3.select(this).classed('city-hovered', false)\n      })\n      .on('click', function (d) {\n        let city = citiesCodinates.find(c => c.ibgeCode === d.properties.cod)\n        setSelectedCity(city)\n        let selecteds = d3.select('#map').selectAll('.city.city-selected')\n        selecteds.nodes().forEach((s) => {\n          d3.select(s).classed('city-selected', false)\n        })\n        d3.select(this).classed('city-selected', true)\n      })\n\n    /**svg.selectAll('.city-circle')\n      .data(citiesCodinates)\n      .enter().append(\"circle\")\n      .attr(\"r\", 4)\n      .attr(\"cx\", function(c){\n        var coords = projection([c.latLng.lng, c.latLng.lat]);\n        return coords[0]\n      })\n      .attr(\"cy\", function(c){\n        var coords = projection([c.latLng.lng, c.latLng.lat]);\n        return coords[1]\n      })\n      **/\n  }\n\n\n\n  return (\n    <div id=\"map\"></div>\n  )\n}","import { createStore } from \"redux\";\n\nfunction reducer(state = {}, action) {\n  switch (action.type) {\n    case \"SET_CITY\":\n      return action.city;\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(reducer);","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport Map from '../../components/Map'\nimport { store } from \"../../stores/rootStore.js\";\n\nimport './style.css'\n\n\nexport default function Chart() {\n\n  const [selectedCity, setSelectedCity] = useState('');\n  const [covidData, setcovidData] = useState('');\n\n  store.subscribe(()=> {\n    setSelectedCity(store.getState())\n  })\n\n\n  useEffect(()=> {\n    axios.get(`https://covid-sc-monitor-backend.herokuapp.com/city/${selectedCity.ibgeCode}`)\n      .then(res => {\n        console.log(res.data)\n    })\n  }, [selectedCity])\n  \n\n  return (\n    <div className=\"container\">\n      <div className=\"chart-container\">\n        <Map />\n      </div>\n      <div className=\"details-container\">\n        <div className=\"details\">\n          <p className=\"title\">\n            {selectedCity.city || 'Santa Catarina'}\n          </p>\n          <div className=\"summary\">\n            <div className=\"summary-item\">\n              <div className=\"description\">\n                Casos confirmados:\n              </div>\n              <div className=\"value\">\n                999\n              </div>\n            </div>\n            <div className=\"summary-item\">\n              <div className=\"description\">\n                Obitos:\n              </div>\n              <div className=\"value\">\n                10\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Chart from './pages/Chart'\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" component={Chart}/>\n      </Switch>\n    </BrowserRouter>\n  );\n}","import React from 'react';\n\nimport './global.css'\n\nimport Routes from './routes'\n\nfunction App() {\n  return (\n   <Routes />\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\n\nimport { store } from \"./stores/rootStore.js\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}